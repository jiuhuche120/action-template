name: build

on:
  pull_request:
    branches:
      - master
      - release*

env:
  GO_VERSION: 1.18.2
  REMOVE_PKG: mock_*|tester|proto|cmd|api

jobs:
  build:
    name: Build project after unittest and golangci-lint
    runs-on: ubuntu-20.04

    steps:
      - name: Set up Go${{ env.GO_VERSION }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Remove no test pkg
        id: pkg
        run: |
          export cmd=$(echo "mock_*|tester|proto|cmd|api" | awk -F '|' '{for (i=1;i<NF;i++) print $i}' \
          | sed "s/^/\'/" | sed "s/$/\'/" | sed 's/^/grep -v /' | sed 's/^/|/' | tr -d '\n' | sed 's/^/go list .\/.../') || exit 1
          export pkgs=$(eval "$cmd") || exit 1
          echo "pkgs=$pkgs" >> $GITHUB_OUTPUT || exit 1

      - name: Run unittest
        run: |
          go test -short -coverprofile cover.out -covermode=atomic ${{ steps.pkg.outputs.pkgs }} || exit 1
          cat cover.out | grep -v "pb.go" >> coverage.txt || exit 1

      - name: Upload Coverage report to CodeCov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.txt

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50.1
          args: --timeout=5m
          only-new-issues: true

      - name: Go Build Project
        run: go build -v ${{ env.BUILD_PATH }}